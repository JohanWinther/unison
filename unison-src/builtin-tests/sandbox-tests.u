
sandbox.check ok name a k =
  match Value.validateSandboxed ok (value a) with
    Left _ -> Tests.fail name "unknown dependencies"
    Right [] -> k true
    Right _  -> k false

sandbox.checkSafe name a =
  sandbox.check [] name a cases
    true  -> Tests.pass (name ++ " safe")
    false -> Tests.fail name " unexpectedly unsafe"

sandbox.checkUnsafe name a =
  sandbox.check [] name a cases
    true  -> Tests.fail name " unexpectedly safe"
    false -> Tests.pass (name ++ " unsafe")

sandbox.checkAllowed name ok a =
  sandbox.check ok name a cases
    true  -> Tests.pass (name ++ " allowed")
    false -> Tests.fail name " unexpected disallowed"

sandbox.tests = do
  checkSafe "5" 5
  checkSafe "5.0" 5.0
  checkSafe "\"\"" ""
  checkSafe "0xs1337" 0xs1337
  checkSafe "List.map" List.map
  checkUnsafe "FilePath.open" FilePath.open
  checkUnsafe "Code.cache_" Code.cache_
  checkAllowed "FilePath.open" [termLink FilePath.open.impl] FilePath.open
  checkAllowed "Code.cache_" [termLink Code.cache_] Code.cache_
